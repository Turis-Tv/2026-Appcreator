
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">

<script disable-devtool-auto="" src='../../js/disable-devtool.js'></script>
    <link rel="stylesheet" href="../../npm/plyr%403.6.2/dist/plyr.css">
    <script src="../../npm/plyr%403.6.12/dist/plyr.min.js"></script>
    <script src="../../npm/hls.js%401.1.4/dist/hls.min.js"></script>
<link rel=" " href="#">

</head>

<body>
    <!-- Custom Text Section -->
    <div class="custom-text">
       <header> 
       
       </header></div>


    <!-- Video Player Section -->
    <div class="video-player">


        <video id="videoPlayer" controls="" crossorigin="" playsinline="" unmuted="" autoplay="">
            <source id="videoSource" type="application/vnd.apple.mpegurl" src="">
        </video>
    </div>
        <div id="channelLoading" class="loading">
            <p>Video Yükleniyor...</p>
        </div>
        <div class="channel-buttons" id="channelList" style="display: none;">
            <!--Kanallar buraya dinamik olarak yüklenecek-->
        </div>
    

    <script>
        const video = document.getElementById('videoPlayer');
        const videoLoading = document.getElementById('videoLoading');
        const channelLoading = document.getElementById('channelLoading');
        const channelList = document.getElementById('channelList');

        // Display video loading animation
        video.addEventListener('waiting', function () {
            videoLoading.style.display = 'block';
        });

        video.addEventListener('playing', function () {
            videoLoading.style.display = 'none';
        });

        // Load demo video when the page loads
        document.addEventListener('DOMContentLoaded', function () {
            const demoVideoUrl = 'https://tatatam.trt1sultanfatihss.workers.dev/http://origi-jw-5.ravenclaw-house.com:80/TR-TRT1/tracks-v1a1/mono.m3u8';
            loadVideo(demoVideoUrl);

            // Fetch and load channels
            loadChannels();
        });

        function loadVideo(sourceUrl) {
            if (Hls.isSupported()) {
                if (window.hls) {
                    window.hls.destroy();
                }
                var hls = new Hls();
                hls.loadSource(sourceUrl);
                hls.attachMedia(video);
                window.hls = hls;
            } else if (video.canPlayType('application/vnd.apple.mpegurl')) {
                video.src = sourceUrl;
            }
            video.play();
        }

        function loadChannels() {
            // Simulate delay for loading channels
            setTimeout(() => {
                fetch('1.m3u')
                    .then(response => response.text())
                    .then(data => {
                        const lines = data.split('\n');
                        let channels = [];
                        let currentChannel = {};

                        lines.forEach(line => {
                            if (line.startsWith('#EXTINF')) {
                                const logoMatch = line.match(/tvg-logo="(.*?)"/);
                                const nameMatch = line.match(/,(.*)/);
                                if (logoMatch && nameMatch) {
                                    currentChannel.logo = logoMatch[1];
                                    currentChannel.name = nameMatch[1];
                                }
                            } else if (line.startsWith('http')) {
                                currentChannel.url = line.trim();
                                channels.push(currentChannel);
                                currentChannel = {};
                            }
                        });

                        channels.forEach(channel => {
                            const channelButton = document.createElement('a');
                            channelButton.href = "#";
                            channelButton.classList.add('channel-link');
                            channelButton.setAttribute('data-link', channel.url);

                            const logoImg = document.createElement('img');
                            logoImg.src = channel.logo;
                            logoImg.alt = channel.name + ' Logo';

                            channelButton.appendChild(logoImg);
                            channelList.appendChild(channelButton);
                        });

                        // Display channels after loading
                        channelLoading.style.display = 'none';
                        channelList.style.display = 'flex';

                        // Add event listeners to channel links
                        document.querySelectorAll('.channel-link').forEach(function (link) {
                            link.addEventListener('click', function (event) {
                                event.preventDefault();
                                const newSource = this.getAttribute('data-link');
                                loadVideo(newSource);
                            });
                        });
                    });
            }, 2000); // Simulating a delay for demonstration
        }
    </script>

    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #181818;
            color: #040404;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }

        /* Custom Text Styling */
        .custom-text {
            margin-top: 20px;
            text-align: center;
        }

        .custom-text h1 {
            font-size: 2rem;
            color: #4CAF50;
            background-color: #222;
            padding: 10px;
            border-radius: 10px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.5);
        }

        .video-player {
            padding: 20px;
            border-radius: 0px;
            margin: 20px 0;
            background-color: #1a1a1a;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.5);
            width: 100%;
            max-width: 900px;
            text-align: center;
            position: sticky;
            top: 0;
            z-index: 1000;
        }

        .video-player h2 {
            background-color: #4CAF50;
            color: white;
            padding: 10px;
            border-radius: 5px;
            margin-bottom: 20px;
        }

        .video-player video {
            width: 100%;
            height: auto;
            border-radius: 10px;
            border: 1px solid #000000;
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);
        }

        .loading {
            font-size: 11px;
            color: white;
            background-color: rgba(0, 0, 0, 0.8);
            padding: 10px;
            border-radius: 10px;
            display: block;
            text-align: center;
        }

        .channel-list {
            background-color: #2b2b2b;
            padding: 20px;
            border-radius: 10px;
            width: 100%;
            max-width: 900px;
            text-align: center;
        }

        .channel-list h2 {
            background-color: #4CAF50;
            color: white;
            padding: 10px;
            border-radius: 5px;
            margin-bottom: 20px;
        }

        .channel-buttons {
            display: flex;
            justify-content: space-around;
            flex-wrap: wrap;
            margin-top: 20px;
        }

        .channel-buttons a {
            background-color: #333;
            width: 100px;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 10px;
            margin: 10px;
            transition: background-color 0.3s ease;
            text-decoration: none;
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
        }

        .channel-buttons a img {
            width: 100px;
            height: 50px;
            border-radius: 0%;
        }

        .channel-buttons a:hover {
            background-color: #4CAF50;
            box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.4);
        }

        @media (max-width: 768px) {
            .video-player,
            .channel-list {
                width: 100%;
                padding: 10px;
            }

            .channel-buttons a {
                width: 100px;
                height: 200px;
            }

            .channel-buttons a img {
                width: 100px;
                height: 200px;
            }
        }
    </style>

</body>

</html>